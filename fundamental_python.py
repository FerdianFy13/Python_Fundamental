# -*- coding: utf-8 -*-
"""Fundamental Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m59G0buFR1y5lu-FwHRUykdstHmU6_Zp

# Fundamental First
"""

print('Ferdian Firmansyah Back end developer')
a = 5
"""Example Comment Multiline"""
print(a)

"""# Fundamental Variable"""

x = 10
x += 5
print("value x =", x)

"""# Fundamental Data Type"""

# example type data integer
num_a = 43
print("nilai a =", num_a, "type data =", type(num_a))

# example type data string
str_a = "Ferdian"
print(str_a, "type data =", type(str_a))

# example type data float
float_a = 43.5
print("nilai a =", float_a, "type data =", type(float_a))

# example type data boolean
boolean_a = True
print("nilai a =", boolean_a, "type data =", type(boolean_a))

# example type data list
list_a = ["amal", "imil", "amel"]
print(list_a[0])

# example type data c_type
from ctypes import c_double
data_c = c_double(10.5)
print(data_c, type(data_c))

"""# Fundamental Casting Type Data"""

int_a = 20
print(int_a, type(int_a))

float_a = float(int_a)
print(float_a, type(float_a))

"""# Fundamental Get Input"""

data = input("Input your name : ")
print(data, type(data))

num = int(input("Input your age : "))
print(num, type(num))

"""
# Fundamental Aritmatika"""

c = 5
o = 9
result = c ** o
print(result)

"""# Latihan Konversi Temperature"""

# latihan konversi satuan temperature
fahrenheit = float(input("Masukka suhu yang ingin dikonversi : "))
celcius = ((5 / 9) * fahrenheit) - 32
kelvin = celcius + 273
print("suhu konversi celcius :", celcius)
print("suhu konversi kelvin :", kelvin)

"""# Fundamental Komparasi"""

# komparasi >, <, >=, <=, ==, !=, is, is not => 
# is membandingkan sebuah variable apakan variable tersebut sama ataupun berbeda
# menghasilkan sebuah output type data boolean
data_a = 10
data_b = 80
com = data_a is data_b
print("Perbandingan komparasi", com)
print(data_b, "id : ", hex(id(data_a)))

"""# Fundamental Logika"""

# dalam operator logika terdapat beberapa operasi seperti not, or, and, xor
data_x = 10
not_x = not data_x
print(not_x)

"""# Latihan Logika dan Komparasi"""

input_user = float(input("Masukkan nilai yang anda inginkan : "))
logic = (0 < input_user < 5) and (8 < input_user < 11)
logic_b = (0 > input_user) or (5 < input_user < 8) or (input_user > 11)
print(logic)
print(logic_b)

"""# Fundamental Bitwise"""

# operasi bitwise merupakan sebuah operasi untuk mengkalkulasi sebuah bit
a = 7
b = 9
c = a | b
print("nilai ", a, "kalkulasi bitwise :", format(a, "08b"))
print("nilai ", b, "kalkulasi bitwise :", format(b, "08b"))
print("nilai ", c, "kalkulasi bitwise :", format(c, "08b"))

"""# Fundamental String"""

data = "Ferdian Firmansyah"
print(data, type(data))

# penggunanan r didepan merupakan sebuah raw string tidak akan mempengaruhi karakter khusus literal string dalam bahasa pemrograman python
# cr => carriage return
# lf leaf feed
# crlf => carriage return leaf feed
data = r'C:\nFerdian\\Firmansyah'
print(data, type(data))

# multiline string
print("""
name : Ferdian Firmansyah
hoby : Programmer
""")

"""# Testing Machine Learning"""

import matplotlib.pyplot as plt
from scipy import stats

x = [89,43,36,36,95,10,66,34,38,20,26,29,48,64,6,5,36,66,72,40]
y = [21,46,3,35,67,95,53,72,58,10,26,34,90,33,38,20,56,2,47,15]

slope, intercept, r, p, std_err = stats.linregress(x, y)

def myfunc(x):
  return slope * x + intercept

mymodel = list(map(myfunc, x))

plt.scatter(x, y)
plt.plot(x, mymodel)
plt.show()

"""# Fundamental Manipulasi Operasi String Part 1"""

from numpy.ma.core import count
# len digunakan untuk menghitung panjang karakter literal dalam string
# in digunakna untuk melakukan pengecekan karakter tersebut apakah ada atau tidak 
nama_awal = "Ferdian"
nama_akhir = "Firmansyah"
nama_lengkap = nama_awal + " " + nama_akhir
status = "f" in nama_lengkap
print(status)
print(nama_lengkap, len(nama_lengkap))

# operasi assignment string
data = ("Laravel" * 10)
print(data)

test = 192

# operasi indexing array
print(nama_lengkap[-1])
print(nama_lengkap[0:5:3])
print(max(nama_lengkap))
print(chr(test))

# assci code
asci = ord(" ")
print(asci)

# penggunaan method dalam literal string
methods = "Laravel Framework"
jml = methods.count("a")
print(jml)

"""# Fundamental Manipulasi Operasi String Part 2"""

# Penggunaan Uppercase literal string python
mekum = "Hello Word"
print("Hy " + mekum)
mekum = mekum.upper()
print("Hy " + mekum)

# melakukan pengecekan dengan method isX method
test1 = mekum.istitle()
print(str(test1))

lista = ["Laravel", "CodeIgniter", "Phalcon"]
gab = " ".join(lista)
print(gab)

# untuk mealokasikan string literal dapat menggunakan rjust, ljust, dan center
left = "kiri".center(10)
print("'"+left+"'")

"""# Fundamental Format String"""

# f merupakan sebuah method untuk melakukan format ketika ingin memasukkan sebuah variable yang ingin dicetak
fm = "Ferdian Valet"
print(f"Hello {fm}")

numers = 2003.222
print(f"age is {numers:.2f}")

per = 0.045
print(f"{per:%}")

# aritmatika format
a = 10
b = 6
print(f"value is {a * b}")

"""# Fundamental String Width ALignment"""

# penggunan tanda control flow untuk mengatur format string dalam python
nama = "Ferdian"
alamat= "Banyuwangi"
default = f"""
nama   = {nama:>10}
alamat = {alamat}
"""
print(default)

"""# Fundamental import Date Time"""

import datetime as datetimes

# day = datetimes.date.today()
# print(day)
# print(f"day is {day:%a}")
print("Enter the month of the year you were born")
tgl = int(input("date \t: "))
bulan = int(input("month \t: "))
tahun = int(input("year \t: "))
result = datetimes.date(tahun,bulan,tgl)
print(f"day is {result}")

age = datetimes.date.today()
calcul = age - result
day_c = calcul.days // 365
print(f"age is {day_c} year")

"""# Fundamental Control Flow"""

# name = input("Input your name : ")
# if name == "amal" :
#   print(f"true {name}")
# elif name == "ferdian" :
#   print(f"middle {name}")
# else :
#   print(f"false {name}")

# calculator minimalits python
number_one = float(input("number one is "))
operator = input("operator is ")
number_two = float(input("number two is "))

if operator == "+" :
  print(number_one + number_two)
elif operator == "-" :
  print(number_one - number_two)
elif operator == "*" :
  print(number_one * number_two)
elif operator == "/" :
  print(number_one / number_two)
elif operator == "%" :
  print(number_one % number_two)
elif operator == "**" :
  print(number_one ** number_two)
else :
  print("not operator in system")

"""# Fundamental Looping"""

# looping pada python cukup menggunakan keyword in 
data = ["dart", "laravel", "CodeIgniter"]
for x in data :
  print(f"x is -> {x}")
for i in range(5) :
  print(i)
for i in range(10,15) :
  print(i)

"""# Fundamental While Loop"""

# penggunaan while loop dalam bahasa pemrograman python 
number = 0
while number < 5:
  number += 1
  print(f"Ferdian Firmansyah {number}")
print("end")

"""# Fundamental Pass and Continue"""

# pass digunakan sebagai sebuah dummy yang tidak akan dieksekusi
num = 0
while num < 5:
  num += 1
  if num == 3:
    print("boolean")
    break
    # continue # akan membuat loop meloncat ke statement selanjutnya
    # pass # tidak akan dieksekusi
  print(num)
  print("fff")
print("end")
# penggunaan break digunakna untuk menghentikan sebuah kondisi jika kondisi tersebut sudah terpenuhi

"""# Fundamental Percabangan"""

# menggunakan for
sisi = 9
count = 1
for i in range(sisi):
  print("*"*count)
  count += 1

print("\nPenggunaan While")
count = 1
while True:
  print("*"*count)
  count += 1

  if count > sisi:
    break

print("\n Bilangan Ganjil")
count = 1
spasi = int(sisi / 2)
while True:
  if count % 2:
    print(" "*spasi,"*"*count)
    spasi -= 1
    count += 1
  else:
    count += 1
    continue

  if count > sisi:
    break

print("\n Bilangan Genap")
count = 1
while True:
  if count % 2:
    count += 1
    continue

  print("*"*count)
  count += 1
  if count > sisi:
    break

"""# Fundamental List"""

# list merupakan sebuah kumpulan data yang ditampung dalam python fungsinya hampir sama dengan penggunaan array
data = ["Ferdian", True, 243, "Firmansyah"]
print(data[1])

# example two menggunakan fungsi list bawaan dari python => range(start, stop, step)
data_x = list(range(1, 10))
print(data_x)

# example three menggunakan looping dalam pembuatan list
data_for = list(i**2 for i in range(1, 9))
print(data_for)

# example four menggunakan percabangan dan control flow dalam pembuatan list
data_if = [i for i in range(1, 10) if i%2 == 0]
print(f"Bilangan Genap  => {data_if}")
data_if = [i for i in range(1, 8) if i%2 == 1]
print(f"Bilangan Ganjil => {data_if}")

"""# Fundamental Manipulasi List"""

# pengenalan index dan manipulasi list dalam bahasa pemrograman python
data = ["Ferdian", "Laravel", "Firmansyah"]
print(f"panjang data {len(data)}")
print(f"data terakhir {data[-1]}")

# example manipulasi list
# a. Untuk menambahkan data dalam operasi manipulasi list menggunakan insert(untuk didepan) dan (append untuk diakhir)
data.insert(0, "Dart")
print(data)
data.append("OOP")
print(data)

# updating data menggunakan list dalam 
data[1] = "CodeIgniter"
print(data)

# deleter data menggunakan list dalam python
data.remove(data[1])
print(data)

# sorting data dalam bahasa pemrograman python
data.sort()
print(data)

# reverse atau urutan data yang diurutkan secara descending
data.sort(reverse = True)
print(data)

"""# Fundamental Operasi List"""

# fungsi count digunakan untuk menghitung jumlah object dalam object list di python
data = [1, 4, 4, 2, 4, 2, 5,4, 6, 6, 7, 8, 3]
print(f"jumlah hitung object => {data.count(6)}")
data.sort()
print(f"ascending  => {data}")
data.reverse()
print(f"descending => {data}")

# index digunakan untuk mengetahui index dari key list yang diinputkan
data = ["Ferdi", "Firman", "Yusuf"]
print(data.index("Firman"))

"""# Fundamental Copy List"""

# copy list dengan cara satu
data = ["Ferdi", "Yusuf", "Ryan"]
x = data
x.sort()
print(x)

# copy list dengan cara dua
c = data.copy()
c[1] = "Fantech"
print(f"{c}")

print(f"jumlah hex data => {hex(id(data))}")
print(f"jumlah hex c    => {hex(id(c))}")

"""# Fundamental Nested List"""

# nested list merupakan sebuah penggabungan list didalam sebuah list
data_a = [1,12]
data_b = [2,13]
# penggunaan list dengan menggunakan cara ini hampir sama dengan array dua dimensi
list_c = [data_a, data_b]
print(list_c)

for dd in list_c:
  # cara akses list dua dimensi
  print(f"angka => {dd[1]}")